<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>airport</artifactId>
        <groupId>com.hanfak.airport</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>application</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <root.package>${project.groupId}</root.package>
        <commons-lang3.version>3.5</commons-lang3.version>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- Plugins -->
        <maven.compiler.plugin.version>3.6.1</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>2.19</maven.surefire.plugin.version>
        <maven.dependency.plugin.version>3.0.1</maven.dependency.plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <acceptance.tests>${project.groupId}.acceptancetests/**/*.java</acceptance.tests>
        <learning.tests>${project.groupId}.learning/**/*.java</learning.tests>
        <skipTests>false</skipTests>
        <maven.surefire.version>2.19.1</maven.surefire.version>
        <required.maven.version>3.0.5</required.maven.version>
        <junit.version>4.12</junit.version>
        <mockito.version>2.23.4</mockito.version>
        <assertj.version>3.12.2</assertj.version>
        <yatspec.version>1.22</yatspec.version>
        <commons.lang.version>3.9</commons.lang.version>
        <jetty.version>>9.4.18.v20190429</jetty.version>
        <log.slf4j.version>1.7.26</log.slf4j.version>
        <findbugs.annotations.version>3.0.1</findbugs.annotations.version>
        <json.version>20160212</json.version>
        <jersey.version>2.28</jersey.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--surefire-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.20.1</version>
                <executions>
                    <execution>
                        <id>surefire-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${project.groupId}.Application</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!--uber-jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <finalName>${project.artifactId}</finalName>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <mainClass>${project.groupId}.Application</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--eclipse-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>false</downloadJavadocs>
                </configuration>
            </plugin>
            <!--exec-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>Main</mainClass>
                </configuration>
            </plugin>
            <!-- PMD -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <skip>${skipTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jxr</goal>
                            <goal>test-jxr</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.6</version>
                <configuration>
                    <skip>${skipTests}</skip>
                    <verbose>true</verbose>
                    <printFailingErrors>true</printFailingErrors>
                    <rulesets>
                        <ruleset>${project.basedir}/pmd/pmd-rules.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <profiles>
        <!-- Main build -->
        <profile>
            <id>main</id>
            <activation>
                <property>
                    <name>!isolated</name><!-- Profile is active unless -Disolated is specified -->
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Shade is used to package an uber JAR which contains all the dependencies -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>2.4.3</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <transformers>
                                        <!-- Add Main-Class to manifest file -->
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>${root.package}.wiring.Application</mainClass>
                                        </transformer>
                                    </transformers>
                                    <filters>
                                        <filter>
                                            <!-- This artifact has stupidly copy-pasted some classes that conflict with the JARs that the classes were copy pasted from, so we should exclude them -->
                                            <artifact>com.google.code.findbugs:annotations</artifact>
                                            <excludes>
                                                <exclude>javax/annotation/**</exclude>
                                                <exclude>net/jcip/annotations/**</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Unit Tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <configuration>
                            <runOrder>failedfirst</runOrder>
                            <trimStackTrace>false</trimStackTrace>
                            <systemPropertyVariables>
                                <log4j.log.dir>${project.build.directory}/surefire-reports/logs</log4j.log.dir>
                                <yatspec.output.dir>${project.build.directory}/surefire-reports/yatspec
                                </yatspec.output.dir>
                            </systemPropertyVariables>
                            <environmentVariables>
                                <NAMESPACE>surefireunittests</NAMESPACE>
                            </environmentVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <exclude>${acceptance.tests}</exclude>
                                        <exclude>${project.groupId}.integrationtests/**/*.java</exclude>
                                        <exclude>${project.groupId}.endtoendtests/**/*.java</exclude>
                                        <exclude>${learning.tests}</exclude>  <!--TODO: Not working???-->
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--acceptance tests-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven.surefire.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.surefire</groupId>
                                <artifactId>surefire-junit47</artifactId>
                                <version>${maven.surefire.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <trimStackTrace>false</trimStackTrace>
                                    <!-- Ensure that the integration tests do not rely on any production code -->
                                    <classpathDependencyScopeExclude>compile</classpathDependencyScopeExclude>
                                    <systemPropertyVariables>
                                        <project.version>${project.version}</project.version>
                                        <yatspec.output.dir>${project.build.directory}/failsafe-reports/yatspec
                                        </yatspec.output.dir>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <includes>
                                <include>${acceptance.tests}</include>
                                <include>${project.groupId}.integrationtests/**/*.java</include>
                                <include>${project.groupId}.endtoendtests/**/*.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <!-- Enable default lifecycle -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <phase>compile</phase>
                            </execution>
                            <execution>
                                <id>default-testCompile</id>
                                <phase>test-compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!--resources-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>default-resources</id>
                                <phase>process-resources</phase>
                            </execution>
                            <execution>
                                <id>default-testResources</id>
                                <phase>process-test-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!--jar-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-jar</id>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--findbugs-->
        <profile>
            <id>findbugs</id>
            <activation>
                <property>
                    <name>!isolated</name><!-- Profile is active unless -Disolated is specified -->
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Enable required lifecycle -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>3.0.4</version>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <failOnError>true</failOnError>
                            <excludeFilterFile>${project.basedir}/findbugs/findbugs-excludes.xml</excludeFilterFile>
                            <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>findbugs-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--jacoco - code coverage-->
        <profile>
            <id>jacoco</id>
            <activation>
                <property>
                    <name>!isolated</name><!-- Profile is active unless -Disolated is specified -->
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <!-- Add this checking -->
                            <execution>
                                <id>jacoco-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>PACKAGE</element>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.99</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                    <excludes>
                                        <exclude>**/com/hanfak/airport/wiring/*</exclude>
                                        <exclude>**/com/hanfak/airport/wiring/**/*</exclude>
                                        <exclude>**/com/hanfak/airport/infrastructure/logging/*</exclude>
                                        <exclude>**/com/hanfak/airport/infrastructure/properties/SettingsLoader.*
                                        </exclude> <!-- Properties Object is not a dependency -->
                                        <exclude>**/com/hanfak/airport/infrastructure/webserver/JettyWebServer.*
                                        </exclude> <!--unit tests are covering this, but not picked up by jacoco -->
                                        <exclude>
                                            **/com/hanfak/airport/infrastructure/dataproviders/database/databaseconnection/HikariDatabaseConnectionPooling.*
                                        </exclude> <!-- create db pool config-->
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>repo.bodar.com</id>
            <url>http://repo.bodar.com</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.8</version>
        </dependency>
        <!--Database pooling¡-->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>3.3.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.1-jre</version>
        </dependency>

        <!-- Reflective toString/equals/hashCode builders -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-core -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>4.1.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-jvm -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
            <version>0.6.0</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_hotspot</artifactId>
            <version>0.6.0</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_servlet</artifactId>
            <version>0.6.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.prometheus/simpleclient_jetty -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_jetty</artifactId>
            <version>0.6.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-inline -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <!--Acceptance testing library-->
        <dependency>
            <groupId>com.googlecode.yatspec</groupId>
            <artifactId>yatspec</artifactId>
            <version>${yatspec.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- This is to make yatspec sequence diagram generator happy -->
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <!-- This is to make yatspec sequence diagram generator happy -->
            <groupId>net.sourceforge.plantuml</groupId>
            <artifactId>plantuml</artifactId>
            <version>8059</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${log.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>io.github.theangrydev</groupId>
            <artifactId>domain-enforcer</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- MIME type finder -->
        <dependency>
            <groupId>net.sf.jmimemagic</groupId>
            <artifactId>jmimemagic</artifactId>
            <version>0.1.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${findbugs.annotations.version}</version>
        </dependency>
        <!--Jetty Webserver-->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>9.4.18.v20190429</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>9.4.18.v20190429</version>
        </dependency>

        <!--Logging input and output requests-->
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>logbook-core</artifactId>
            <version>1.13.0</version>
        </dependency>
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>logbook-servlet</artifactId>
            <version>1.13.0</version>
        </dependency>

        <!--scheduling-->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!--Http client-->
        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.14.2</version>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
        </dependency>
        <!--Json serializing -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180813</version>
        </dependency>
        <!--Rest-->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!--Need for jersey 2.26 and later-->
            <!--https://stackoverflow.com/questions/44088493/jersey-stopped-working-with-injectionmanagerfactory-not-found/51217530#51217530-->
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>

